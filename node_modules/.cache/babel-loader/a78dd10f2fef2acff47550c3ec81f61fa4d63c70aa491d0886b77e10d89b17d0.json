{"ast":null,"code":"var _jsxFileName = \"/Users/m1/Desktop/01-starting-setup/src/App.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./components/ExpenseItem\";\nimport Expenses from \"./components/Expenses\";\nimport ExpenseForm from \"./components/NewExpense/ExpenseForm\";\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { supabase } from \"./supabaseClient\";\nimport { FormEventHandler, useEffect, useState } from 'react';\n\n// import ExpensesFilter from './components/ExpensesFilter';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  // const [first, setName] = useState('');\n  // const [last, setLast] = useState('');\n  // const [email, setEmail] = useState('')\n  // const [date, setDate] = useState('');\n  // const [metho, setMetho] = useState([]);\n  const [people2, setPeople2] = useState([]);\n  // const [editing, setEditing] = useState(false);\n  useEffect(() => {\n    getPeople2();\n  }, []);\n  async function getPeople2() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('people2').select();\n      if (error) throw error;\n      if (data != null) {\n        setPeople2(data);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n    console.log(people2);\n  }\n  const Metho = people2.map(people2 => ({\n    id2: people2.id,\n    title2: people2.email,\n    amount2: people2.first_name,\n    date2: people2.Date\n  }));\n\n  // let tit = (metho[0].title)\n\n  const expenses = [{\n    id: \"e1\",\n    title: 'metho.spice(1)',\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n  const addExpenseHandler = expense => {\n    console.log('in App.js');\n    console.log(expense);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [people2.map(people => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: people.email\n    }, void 0, false)), /*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      metho: Metho,\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 4\n  }, this);\n}\n_s(App, \"xFv9VPOGdqoiRmYS88UyhH7seRI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ExpenseItem","Expenses","ExpenseForm","NewExpense","supabase","FormEventHandler","useEffect","useState","App","props","people2","setPeople2","getPeople2","data","error","from","select","alert","message","console","log","Metho","map","id2","id","title2","email","amount2","first_name","date2","Date","expenses","title","amount","date","addExpenseHandler","expense","people"],"sources":["/Users/m1/Desktop/01-starting-setup/src/App.js"],"sourcesContent":["import ExpenseItem from \"./components/ExpenseItem\";\nimport Expenses from \"./components/Expenses\"\nimport ExpenseForm from \"./components/NewExpense/ExpenseForm\";\nimport NewExpense from './components/NewExpense/NewExpense';\nimport { supabase } from \"./supabaseClient\";\nimport { FormEventHandler, useEffect, useState } from 'react';\n\n\n// import ExpensesFilter from './components/ExpensesFilter';\nfunction App(props) {\n  // const [first, setName] = useState('');\n  // const [last, setLast] = useState('');\n  // const [email, setEmail] = useState('')\n  // const [date, setDate] = useState('');\n  // const [metho, setMetho] = useState([]);\n  const [people2, setPeople2] = useState([]);\n  // const [editing, setEditing] = useState(false);\n  useEffect(()=>{\n    getPeople2();\n  },[])\n\n\n\n  async function getPeople2(){\n    \n    try{\n      const {data, error} = await supabase\n      .from('people2')\n      .select()\n      if (error) throw error;\n      if(data != null){\n        setPeople2(data);\n      }\n\n    }\n    catch(error){\n      alert(error.message);\n    }\n    console.log(people2)\n  }\n\n  const Metho = people2.map((people2)=>(\n    {\n        id2: people2.id,\n        title2: people2.email,\n        amount2: people2.first_name,\n        date2: people2.Date,\n      }\n    \n    ))\n\n  // let tit = (metho[0].title)\n  \n\n  const expenses = [\n    {\n      id: \"e1\",\n      title: 'metho.spice(1)',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const addExpenseHandler = (expense) => {\n    console.log('in App.js')\n    console.log(expense);\n  }\n\n   return(\n   \n   <div>\n    {people2.map((people)=>(\n      <>{people.email}</>\n    ))}\n    {/* <p>{Metho[0].title2}</p> */}\n     {/* <ExpensesFilter></ExpensesFilter> */}\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n     <Expenses metho={Metho} items={expenses}/>\n    \n   \n     </div>\n   )\n \n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,gBAAgB,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAG7D;AAAA;AAAA;AACA,SAASC,GAAG,CAACC,KAAK,EAAE;EAAA;EAClB;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACAD,SAAS,CAAC,MAAI;IACZM,UAAU,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EAIL,eAAeA,UAAU,GAAE;IAEzB,IAAG;MACD,MAAM;QAACC,IAAI;QAAEC;MAAK,CAAC,GAAG,MAAMV,QAAQ,CACnCW,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,EAAE;MACT,IAAIF,KAAK,EAAE,MAAMA,KAAK;MACtB,IAAGD,IAAI,IAAI,IAAI,EAAC;QACdF,UAAU,CAACE,IAAI,CAAC;MAClB;IAEF,CAAC,CACD,OAAMC,KAAK,EAAC;MACVG,KAAK,CAACH,KAAK,CAACI,OAAO,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;EACtB;EAEA,MAAMW,KAAK,GAAGX,OAAO,CAACY,GAAG,CAAEZ,OAAO,KAChC;IACIa,GAAG,EAAEb,OAAO,CAACc,EAAE;IACfC,MAAM,EAAEf,OAAO,CAACgB,KAAK;IACrBC,OAAO,EAAEjB,OAAO,CAACkB,UAAU;IAC3BC,KAAK,EAAEnB,OAAO,CAACoB;EACjB,CAAC,CAEF,CAAC;;EAEJ;;EAGA,MAAMC,QAAQ,GAAG,CACf;IACEP,EAAE,EAAE,IAAI;IACRQ,KAAK,EAAE,gBAAgB;IACvBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIJ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IAAEN,EAAE,EAAE,IAAI;IAAEQ,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,IAAIJ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAC1E;IACEN,EAAE,EAAE,IAAI;IACRQ,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIJ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEN,EAAE,EAAE,IAAI;IACRQ,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIJ,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF;EAED,MAAMK,iBAAiB,GAAIC,OAAO,IAAK;IACrCjB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACgB,OAAO,CAAC;EACtB,CAAC;EAEA,oBAEA;IAAA,WACE1B,OAAO,CAACY,GAAG,CAAEe,MAAM,iBAClB;MAAA,UAAGA,MAAM,CAACX;IAAK,iBAChB,CAAC,eAGA,QAAC,UAAU;MAAC,YAAY,EAAES;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAc,eAC3D,QAAC,QAAQ;MAAC,KAAK,EAAEd,KAAM;MAAC,KAAK,EAAEU;IAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAGpC;AAGX;AAAC,GAvFQvB,GAAG;AAAA,KAAHA,GAAG;AAyFZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}